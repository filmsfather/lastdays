// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard/admin" | "/dashboard/admin/timeslot-management" | "/dashboard/student" | "/dashboard/student/history" | "/dashboard/teacher" | "/dashboard/teacher/students" | "/dashboard/teacher/students/[studentId]" | "/dashboard/teacher/today" | "/login" | "/session/[id]/feedback" | "/teacher/problems/[id]" | "/teacher/problems/new"
type AppRouteHandlerRoutes = "/api/admin/accounts" | "/api/admin/accounts/[id]" | "/api/admin/scheduler" | "/api/admin/slots" | "/api/admin/slots/create-single-slot" | "/api/admin/slots/create-timeslots" | "/api/admin/slots/manage-timeslots" | "/api/admin/tickets/grant" | "/api/admin/tickets/weekly-issue" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/change-pin" | "/api/me/tickets" | "/api/reservations" | "/api/reservations/[id]" | "/api/reservations/[id]/select-problem" | "/api/sessions/[id]/checklist" | "/api/sessions/[id]/checklist/[itemId]" | "/api/sessions/[id]/feedback" | "/api/sessions/[id]/reflection" | "/api/sessions/[id]/scores" | "/api/slots" | "/api/student/history" | "/api/student/problems" | "/api/student/problems/[problemId]/availability" | "/api/student/sessions" | "/api/teacher/dashboard/stats" | "/api/teacher/problems" | "/api/teacher/problems/[id]" | "/api/teacher/problems/[id]/archive" | "/api/teacher/problems/[id]/duplicate" | "/api/teacher/problems/[id]/publish" | "/api/teacher/schedule/today" | "/api/teacher/students" | "/api/teacher/students/[studentId]" | "/api/upload/images"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/admin/accounts": {}
  "/api/admin/accounts/[id]": { "id": string; }
  "/api/admin/scheduler": {}
  "/api/admin/slots": {}
  "/api/admin/slots/create-single-slot": {}
  "/api/admin/slots/create-timeslots": {}
  "/api/admin/slots/manage-timeslots": {}
  "/api/admin/tickets/grant": {}
  "/api/admin/tickets/weekly-issue": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/change-pin": {}
  "/api/me/tickets": {}
  "/api/reservations": {}
  "/api/reservations/[id]": { "id": string; }
  "/api/reservations/[id]/select-problem": { "id": string; }
  "/api/sessions/[id]/checklist": { "id": string; }
  "/api/sessions/[id]/checklist/[itemId]": { "id": string; "itemId": string; }
  "/api/sessions/[id]/feedback": { "id": string; }
  "/api/sessions/[id]/reflection": { "id": string; }
  "/api/sessions/[id]/scores": { "id": string; }
  "/api/slots": {}
  "/api/student/history": {}
  "/api/student/problems": {}
  "/api/student/problems/[problemId]/availability": { "problemId": string; }
  "/api/student/sessions": {}
  "/api/teacher/dashboard/stats": {}
  "/api/teacher/problems": {}
  "/api/teacher/problems/[id]": { "id": string; }
  "/api/teacher/problems/[id]/archive": { "id": string; }
  "/api/teacher/problems/[id]/duplicate": { "id": string; }
  "/api/teacher/problems/[id]/publish": { "id": string; }
  "/api/teacher/schedule/today": {}
  "/api/teacher/students": {}
  "/api/teacher/students/[studentId]": { "studentId": string; }
  "/api/upload/images": {}
  "/dashboard/admin": {}
  "/dashboard/admin/timeslot-management": {}
  "/dashboard/student": {}
  "/dashboard/student/history": {}
  "/dashboard/teacher": {}
  "/dashboard/teacher/students": {}
  "/dashboard/teacher/students/[studentId]": { "studentId": string; }
  "/dashboard/teacher/today": {}
  "/login": {}
  "/session/[id]/feedback": { "id": string; }
  "/teacher/problems/[id]": { "id": string; }
  "/teacher/problems/new": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
